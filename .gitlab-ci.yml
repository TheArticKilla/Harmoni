image: node:8

# Set up MySQL test-database
services:
  - mysql:5.5

# Configure test-database
variables:
  MYSQL_DATABASE: yeet
  MYSQL_ROOT_PASSWORD: mysql

stages:
  - connect
  - test
  - pages
  - b_hosting
  - f_hosting

# Run JEST tests
run_tests:
  stage: test
  script:
    - cd backend && npm install
    - npm test
  artifacts:
    paths:
      - backend/coverage/

connect:
  stage: connect
  image: mysql
  script:
    - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"

# Publish coverage report on gitlab-pages
pages:
  stage: pages
  dependencies:
    - run_tests
  script:
    - cd backend && npm install
    - npm install
    - cd ..
    - mkdir .public
    - cp -r backend/coverage/* .public
    - mv .public public
  artifacts:
    paths:
      - public/*


# Job 2:
# Deploy to staging
back_hosting:
  image: ruby:latest
  only:
    - dev
  stage: b_hosting
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - cd backend
    - dpl --provider=heroku --app=$HEROKU_APP_NAME_API --api-key=$HEROKU_API_KEY


front_hosting:
  stage: f_hosting
  script:
    - cd frontend
    - npm install # Install all dependencies
    - npm run build --prod
    - cd ..
    - cp frontend/public/index.html
    - mv public _public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    - mv build public # Move build files to public dir for Gitlab Pages
  artifacts:
    paths:
    - public # The built files for Gitlab Pages to serve
  only:
    - dev # Only run on master branch